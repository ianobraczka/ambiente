- content_for :title, "#{@subsubsystem.subsystem.name} > #{@subsubsystem.name}"

.history-container
  ←
  \#{link_to @subsubsystem.subsystem.system.area.enterprise.program.name, @subsubsystem.subsystem.system.area.enterprise.program}
  ←
  \#{link_to @subsubsystem.subsystem.system.area.enterprise.name, @subsubsystem.subsystem.system.area.enterprise}
  ←
  \#{link_to @subsubsystem.subsystem.system.area.name, @subsubsystem.subsystem.system.area}
  ←
  \#{link_to @subsubsystem.subsystem.system.name, @subsubsystem.subsystem.system}
  ←
  \#{link_to @subsubsystem.subsystem.name, @subsubsystem.subsystem}
%center
  - if @subsubsystem.image.exists?
    = image_tag @subsubsystem.image.url
#edit-and-delete-section-buttons-container
  .edit-section-button= link_to 'Album', "/album/view_album?model=subsubsystem&id=#{@subsubsystem.id}", :class => "btn"
  .edit-section-button= button_to 'Editar', edit_subsubsystem_path(@subsubsystem), :class => "btn"
  .delete-section-button= button_to "Deletar subsubsistema", @subsubsystem, method: :delete, data: { confirm: 'Tem certeza que quer deletar esse subsubsistema?' }, :class => "btn btn-danger"
%h1.area-title= @subsubsystem.name
.list-item.section-details
  %br
    .content
      %span.percentage-number
        %b
          = @subsubsystem.completed
          \%
      completo
    .content
      %b Investimento:
      = number_to_currency(@subsubsystem.price, :unit => "R$", :separator => ",", :delimiter => ".")
    %hr
      .content
        %b Quant. total planejada:
        = @subsubsystem.planned_quantity
        = @subsubsystem.unity
      .content
        %b Quant. total realizada:
        = @subsubsystem.real_quantity
        = @subsubsystem.unity
    %hr
      .content
        %b Ponderações calculadas:
        = "Valor: #{(@subsubsystem.value * 100 / @subsubsystem.system_value).round} %"
        %br
        = "Porcentagem: #{(@subsubsystem.percentage * 100 / @subsubsystem.system_percentage).round} %"
        %br
        = "HH: #{(@subsubsystem.hh * 100 / @subsubsystem.system_hh).round} %"
      %hr
        .content
          %b HH:
          = @subsubsystem.hh
        .content
          %b Valor:
          = number_to_currency(@subsubsystem.value, :unit => "R$", :separator => ",", :delimiter => ".")
        .content
          %b Porcentagem:
          = @subsubsystem.percentage
          \%
        %br
    = form_for(@subsubsystem) do |f|
      - if @subsubsystem.errors.any?
        #error_explanation
          %h2
            = pluralize(@subsubsystem.errors.count, "error")
            prohibited this product from being saved:
          %ul
            - @subsubsystem.errors.full_messages.each do |msg|
              %li= msg
      .content= f.label "Escolha o ponderador"
      .content= f.select :weight, options_for_select([["Valor", 0], ["HH", 2], ["Porcentagem", 1]], @subsubsystem.weight)
      %center
        .content
          = f.submit "Ponderar", :class => "btn btn-success"
      %br/
%br
  - if !@subsubsystem.plannings.empty?
    %hr
      %br
        %span.medium_font
          Planejamento atual:
          %br
            %br/
        .row
          - period_number = -1
          - @subsubsystem.current_planning.periods.each do |period|
            - period_number += 1
            .span4.list-item
              .name
                = "#{period.number}o período"
              - if @subsubsystem.current_planning.periods.first.quantity != nil
                .content
                  Data de início:
                  %span.date
                    = period.begin_date.to_formatted_s(:rfc822)
                .content
                  Data de término:
                  %span.date
                    = period.end_date.to_formatted_s(:rfc822)
                %hr
              .content
                %center
                  No período
                %br
                Previsto:
                %br
                %spam.percentage-number
                  - if @subsubsystem.planned_quantity != 0
                    = "#{(period.planned_quantity*100/@subsubsystem.planned_quantity).round}%"
                  - else
                    0%
                #{period.planned_quantity} #{@subsubsystem.unity}
                %br
                %spam.percentage-number
                  - if @subsubsystem.financeiro["value_planned"] != 0
                    = "#{(period.value_planned / @subsubsystem.financeiro["value_planned"] * 100).round}%"
                  -else
                    = "0%"
                = number_to_currency(period.value_planned, :unit => "R$", :separator => ",", :delimiter => ".")
                %br
                %br
              - if period.quantity != nil
                .content

                  Realizado:
                  %br
                  %spam.percentage-number
                    - if @subsubsystem.planned_quantity != 0
                      = "#{(period.quantity*100/@subsubsystem.planned_quantity).round}%"
                    - else
                      0%
                  #{period.real_quantity} #{@subsubsystem.unity}
                  %br
                  %spam.percentage-number
                  - if @subsubsystem.financeiro["value_planned"] != 0
                    = "#{(period.value_real / @subsubsystem.financeiro["value_planned"] * 100).round}%"
                  -else
                    = "0%"
                  = number_to_currency(period.value_real, :unit => "R$", :separator => ",", :delimiter => ".")
                  %br
                  %br
                %hr
                  .content
                    %center
                      Até o período:
                    %br
                    Previsto
                    %br
                    %spam.percentage-number
                      - unless @subsubsystem.planned_quantity == 0
                        = "#{((period.planned_until_period/@subsubsystem.planned_quantity)*100).round}%"
                      - else
                        0%
                    #{period.planned_until_period} #{@subsubsystem.unity}
                    %br
                    %spam.percentage-number
                    - if @subsubsystem.financeiro["value_planned"] != 0
                      = "#{(period.planned_until_period_value / @subsubsystem.financeiro["value_planned"] * 100).round}%"
                    -else
                      = "0%"
                    = number_to_currency(period.planned_until_period_value, :unit => "R$", :separator => ",", :delimiter => ".")
                    %br
                    %br
                  .content
                    Realizado
                    %br
                    %spam.percentage-number
                      - unless @subsubsystem.planned_quantity == 0
                        = "#{(period.made_until_period/@subsubsystem.planned_quantity).round}%"
                      - else
                        0%
                    #{period.real_until_period} #{@subsubsystem.unity}
                    %br
                    %spam.percentage-number
                    - if @subsubsystem.financeiro["value_planned"] != 0
                      = "#{(period.real_until_period_value / @subsubsystem.financeiro["value_planned"] * 100).round}%"
                    -else
                      = "0%"
                    = number_to_currency(period.real_until_period_value, :unit => "R$", :separator => ",", :delimiter => ".")
                    %br
                    = "#{number_to_currency((period.real_until_period_value / period.real_until_period), :unit => "R$", :separator => ",", :delimiter => ".")} por unidade."
                    %br
                    %br
                  %br
                  %hr
                  .content
                    %br
                    %br
                      %small
                        %center
                          No período
                      %table
                        %tr
                          %td{:width => "100px"}
                            %center
                              %b Previsto
                          %td{:width => "100px"}
                            %center
                              %b Realizado
                        %tr
                          - data = @subsubsystem.avanco_fisico_ponderado
                          %td{:width => "100px"}
                            %center
                              = "#{data[period_number][0][@subsubsystem.weight].round.to_s}%"
                          %td{:width => "100px"}
                            %center
                              = "#{data[period_number][2][@subsubsystem.weight].round.to_s}%"
                    %small
                      %center
                        %br
                        %br
                        Até o período
                    %table
                      %tr
                        %td{:width => "100px"}
                          %center
                            %b Previsto
                        %td{:width => "100px"}
                          %center
                            %b Realizado
                      %tr
                        %td{:width => "100px"}
                          %center
                            = "#{data[period_number][1][@subsubsystem.weight].round.to_s}%"
                        %td{:width => "100px"}
                          %center
                            = "#{data[period_number][3][@subsubsystem.weight].round.to_s}%"
              - if @subsubsystem.current_period.quantity == nil && @subsubsystem.current_period == period
                = form_for(@subsubsystem.current_period) do |f|
                  - if @subsubsystem.current_period.errors.any?
                    #error_explanation
                      %h2
                        = pluralize(@subsubsystem.current_period.errors.count, "error")
                        prohibited this product from being saved:
                      %ul
                        - @subsubsystem.current_period.errors.full_messages.each do |msg|
                          %li= msg
                  %hr
                    .content
                      %center
                        %span.very_small_font Quant. realizada:
                        %br
                        %br
                        = f.number_field :quantity
                        %br
                        %br
                        %span.very_small_font Valor realizado:
                        = f.number_field :value_real
                        %br= f.submit "Entrar", :class => "btn btn-success"
        %br
          /= binding.pry
          = link_to "Editar planejamento", "/subsubsystems/#{@subsubsystem.id}/plannings/#{@subsubsystem.current_planning_id}/edit", :method => "get", :class => "btn btn-success"
          = button_to "Novo planejamento", new_subsubsystem_planning_path(@subsubsystem), :method => "get", :class => "btn btn-success"
  - else
    %br
      .alert.alert-error
        %button.close{"data-dismiss" => "alert", :type => "button"} &times;
        %center
          %strong Esse subsubsistema ainda não possui planejamento
      %br
        %br
          %center= button_to "Cadastrar planejamento", new_subsubsystem_planning_path(@subsubsystem), :method => "get", :class => "btn btn-success"
          %br
  = form_for(@subsubsystem) do |f|
    - if @subsubsystem.errors.any?
      #error_explanation
        %h2
          = pluralize(@subsubsystem.errors.count, "error")
          prohibited this product from being saved:
        %ul
          - @subsubsystem.errors.full_messages.each do |msg|
            %li= msg
    - if @subsubsystem.all_plannings.length > 0
      .content
        %strong= f.label "Escolha o planejamento"
      .content
        = f.select(:current_planning_id, options_for_select(@subsubsystem.all_plannings, "1"))
      %center
        .content= f.submit "Escolher", :class => "btn btn-success"

%center
  #show_chart
    %div{:id => "sub_#{@subsubsystem.id}"}
    = link_to "Gráfico aqui!", "#", :data => "XD"
%br
#chart_container