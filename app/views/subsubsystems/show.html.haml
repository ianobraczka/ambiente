.history-container
  ←
  \#{link_to @subsubsystem.subsystem.system.area.enterprise.program.name, @subsubsystem.subsystem.system.area.enterprise.program}
  ←
  \#{link_to @subsubsystem.subsystem.system.area.enterprise.name, @subsubsystem.subsystem.system.area.enterprise}
  ←
  \#{link_to @subsubsystem.subsystem.system.area.name, @subsubsystem.subsystem.system.area}
  ←
  \#{link_to @subsubsystem.subsystem.system.name, @subsubsystem.subsystem.system}
  ←
  \#{link_to @subsubsystem.subsystem.name, @subsubsystem.subsystem}
%center
  - if @subsubsystem.image.exists?
    = image_tag @subsubsystem.image.url
#edit-and-delete-section-buttons-container
  .edit-section-button= button_to 'Editar', edit_subsubsystem_path(@subsubsystem), :class => "btn"
  .delete-section-button= button_to "Deletar subsubsistema", @subsubsystem, method: :delete, data: { confirm: 'Tem certeza que quer deletar esse subsubsistema?' }, :class => "btn btn-danger"
%h1.area-title= @subsubsystem.name
.list-item.section-details
  %br
    .content
      %span.percentage-number
        %b
          = @subsubsystem.completed
          \%
      completo
    .content
      %b Investimento:
      = number_to_currency(@subsubsystem.price, :unit => "R$", :separator => ",", :delimiter => ".")
    %hr
      .content
        %b Quant. total planejada:
        = @subsubsystem.planned_quantity
        = @subsubsystem.unity
      .content
        %b Quant. total realizada:
        = @subsubsystem.real_quantity
        = @subsubsystem.unity
      %hr
        .content
          %b HH:
          = @subsubsystem.hh
        .content
          %b Valor:
          = number_to_currency(@subsubsystem.value, :unit => "R$", :separator => ",", :delimiter => ".")
        .content
          %b Porcentagem:
          = @subsubsystem.percentage
          \%
        %br
%br
  - if !@subsubsystem.plannings.empty?
    %hr
      %br
        %span.medium_font
          Planejamento atual:
          %br
            %br/
        .row
          - @subsubsystem.current_planning.periods.each do |period|
            .span4.list-item
              .name
                = "#{period.number}o período"
              - if @subsubsystem.current_planning.periods.first.quantity != nil
                .content
                  Data de início:
                  %span.date
                    = period.begin_date.to_formatted_s(:rfc822)
                .content
                  Data de término:
                  %span.date
                    = period.end_date.to_formatted_s(:rfc822)
                %hr
              .content
                Quant. prevista no período: #{period.planned_quantity} #{@subsubsystem.unity}
              - if period.quantity != nil
                .content
                  Quant. realizada no período: #{period.real_quantity} #{@subsubsystem.unity} (
                  %span.percentage-number>
                    - if @subsubsystem.planned_quantity != 0
                      = (period.quantity*100/period.planned_quantity).round
                    - else
                      0
                    \%
                  )
                %hr
                  .content
                    Quant. prev. até o período: #{period.planned_until_period} #{@subsubsystem.unity}
                  .content
                    Quant. real. até o período: #{period.real_until_period} #{@subsubsystem.unity} (
                    %span.percentage-number>
                      - unless @subsubsystem.planned_quantity == 0
                        = period.made_until_period.round
                      - else
                        0
                      \%
                    )
                  %br
              - if @subsubsystem.current_period.quantity == nil && @subsubsystem.current_period == period
                = form_for(@subsubsystem.current_period) do |f|
                  - if @subsubsystem.current_period.errors.any?
                    #error_explanation
                      %h2
                        = pluralize(@subsubsystem.current_period.errors.count, "error")
                        prohibited this product from being saved:
                      %ul
                        - @subsubsystem.current_period.errors.full_messages.each do |msg|
                          %li= msg
                  %hr
                    .content
                      %center
                        %span.very_small_font Quant. realizada:
                        %br
                          %br
                            = f.number_field :quantity
                            %br= f.submit "Entrar", :class => "btn btn-success"
        %br
          /= binding.pry
          = link_to "Editar planejamento", "/subsubsystems/#{@subsubsystem.id}/plannings/#{@subsubsystem.current_planning_id}/edit", :method => "get", :class => "btn btn-success"
          = button_to "Novo planejamento", new_subsubsystem_planning_path(@subsubsystem), :method => "get", :class => "btn btn-success"
  - else
    %br
      .alert.alert-error
        %button.close{"data-dismiss" => "alert", :type => "button"} &times;
        %center
          %strong Esse subsubsistema ainda não possui planejamento
      %br
        %br
          %center= button_to "Cadastrar planejamento", new_subsubsystem_planning_path(@subsubsystem), :method => "get", :class => "btn btn-success"
          %br
  = form_for(@subsubsystem) do |f|
    - if @subsubsystem.errors.any?
      #error_explanation
        %h2
          = pluralize(@subsubsystem.errors.count, "error")
          prohibited this product from being saved:
        %ul
          - @subsubsystem.errors.full_messages.each do |msg|
            %li= msg
    - if @subsubsystem.all_plannings.length > 0
      .content
        %strong= f.label "Escolha o planejamento"
      .content
        = f.select(:current_planning_id, options_for_select(@subsubsystem.all_plannings, "1"))
      %center
        .content= f.submit "Escolher", :class => "btn btn-success"